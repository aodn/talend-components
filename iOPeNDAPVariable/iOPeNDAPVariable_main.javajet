<%@ jet
imports="
org.talend.core.model.metadata.IMetadataColumn
org.talend.core.model.metadata.IMetadataTable
org.talend.core.model.process.EConnectionType
org.talend.core.model.process.IConnection
org.talend.core.model.process.INode
org.talend.designer.codegen.config.CodeGeneratorArgument
org.talend.core.model.metadata.types.JavaTypesManager
java.util.List
"
%>
<% CodeGeneratorArgument codeGenArgument = (CodeGeneratorArgument) argument;
INode node = (INode)codeGenArgument.getArgument();
String cid = node.getUniqueName();	
List<IMetadataTable> metadatas = node.getMetadataList();
if ((metadatas != null) && (metadatas.size() > 0)) {//b
 IMetadataTable metadata = metadatas.get(0);
 if (metadata != null) {//a
  List<IMetadataColumn> columns = metadata.getListColumns();	
  
  List< ? extends IConnection> outConns = node.getOutgoingConnections();
  for (IConnection conn : outConns) 
  { //2	
   if (conn.getLineStyle().equals(EConnectionType.FLOW_MAIN)||conn.getLineStyle().equals(EConnectionType.FLOW_MERGE))
   { //3
    String outputConnName = conn.getName();
    
    for (int i = 0; i < columns.size(); i++) 
    {//4
     IMetadataColumn column = columns.get(i);

     String ttg = JavaTypesManager.getTypeToGenerate(column.getTalendType(),true);
     
     if (column.getLabel().equals("name") && ttg.equals("String"))
     {//5
%>
       <%=outputConnName %>.<%=column.getLabel() %> = variable_<%=cid %>.getClearName();
<%  
     }//5 
     else if (column.getLabel().equals("type") && ttg.equals("String"))
     {//5
%>
       opendap.dap.BaseType containedVariable_<%=cid %>;
       
       if (variable_<%=cid %> instanceof opendap.dap.DGrid) {
           containedVariable_<%=cid %> = ((opendap.dap.DGrid) variable_<%=cid %>).getArray().getPrimitiveVector().getTemplate();
       } else if (variable_<%=cid %> instanceof opendap.dap.DArray) {
           containedVariable_<%=cid %> = ((opendap.dap.DArray) variable_<%=cid %>).getPrimitiveVector().getTemplate();
       } else {
           containedVariable_<%=cid %> = variable_<%=cid %>;
       }
       
       <%=outputConnName %>.<%=column.getLabel() %> = containedVariable_<%=cid %>.getTypeName();
<%  
     }//5 
     else if (column.getLabel().equals("dimensions") && ttg.equals("String"))
     {//5
%>

		java.util.Enumeration<opendap.dap.DArrayDimension> arrayDimensions_<%=cid %> = null; 
		
		if (variable_<%=cid %> instanceof opendap.dap.DGrid) {
			arrayDimensions_<%=cid %> = ((opendap.dap.DGrid) variable_<%=cid %>).getArray().getDimensions();
		} else if (variable_<%=cid %> instanceof opendap.dap.DArray) {
			arrayDimensions_<%=cid %> = ((opendap.dap.DArray) variable_<%=cid %>).getDimensions();
		}

		if (arrayDimensions_<%=cid %> != null) {			
			StringBuilder dimensions = new StringBuilder("");
			
			while (arrayDimensions_<%=cid %>.hasMoreElements()) {
				opendap.dap.DArrayDimension dimension_<%=cid %> = arrayDimensions_<%=cid %>.nextElement();
				dimensions.append(dimension_<%=cid %>.getClearName());
				if (arrayDimensions_<%=cid %>.hasMoreElements()) {
					dimensions.append(",");
				}
			}
			
			<%=outputConnName %>.<%=column.getLabel() %> = dimensions.toString();
	    }
<%
     }//5     
    }//4
   }//3
  }//2
 }//a
}//b
%>
    
