<%@ jet 
imports="
    org.talend.core.model.process.INode 
    org.talend.core.model.metadata.IMetadataTable
    org.talend.core.model.metadata.IMetadataColumn
    org.talend.core.model.process.IConnection
    org.talend.core.model.process.IConnectionCategory
    org.talend.core.model.process.ElementParameterParser
    org.talend.designer.codegen.config.CodeGeneratorArgument
    org.talend.core.model.metadata.types.JavaTypesManager
    org.talend.core.model.metadata.types.JavaType
    java.util.List
    java.util.Map
    
"
%>

<%
CodeGeneratorArgument codeGenArgument = (CodeGeneratorArgument) argument;
INode node = (INode)codeGenArgument.getArgument();
String cid = node.getUniqueName();
String colAgg = ElementParameterParser.getValue(node,"__COL__");
String colAggType = "String"; // initial value
String operation = ElementParameterParser.getValue(node,"__OPERATION__");
boolean noColSelected = ElementParameterParser.getValue(node, "__NO_COL_SELECTED__").equals("true");

IMetadataColumn geometryColumn = null;
List<IMetadataTable> metadatas = node.getMetadataList();
if ((metadatas != null) && (metadatas.size() > 0)) {
    IMetadataTable metadata = metadatas.get(0);
    if (metadata != null) {
        List<IMetadataColumn> columns = metadata.getListColumns();
        for (int j = 0; j < columns.size(); j++) {
            IMetadataColumn column = columns.get(j);
            // Look for the geometry column to be used by the aggregation
            String typeToGenerate = JavaTypesManager.getTypeToGenerate(column.getTalendType(), column.isNullable());
            if(typeToGenerate.equals("Geometry")) {
                geometryColumn = column;
                break;
            }
        }
    }
}

if (geometryColumn == null){
    return "error(\"Cannot find a geometry column\");";
}
String colGeo = geometryColumn.getLabel();

%>

// <%= operation %>
class OperationStruct<%=cid %> {

<%
        if (operation.equals("makeLine")) {
%>

    com.vividsolutions.jts.geom.CoordinateList <%=colGeo %>;
    org.opengis.referencing.crs.CoordinateReferenceSystem inputCRS;
<%
        } else {
%>

    Geometry <%=colGeo %>;

<%
        }
%>

<%
List<? extends IConnection> incomingConnections = node.getIncomingConnections();
if (incomingConnections != null && !incomingConnections.isEmpty()) {
    for (IConnection conn : incomingConnections) {
        if (conn.getLineStyle().hasConnectionCategory(IConnectionCategory.DATA)) {
            IMetadataTable inMetadata = conn.getMetadataTable();
            for (IMetadataColumn column: inMetadata.getListColumns()) {
                if (column.getLabel().equals(colAgg)){   // Add aggregate column
                                                         // TODO : Could add a number of aggregated features
                    // Get column data type
                    JavaType javaType = JavaTypesManager.getJavaTypeFromId(column.getTalendType());
                    
                    if (javaType == JavaTypesManager.BOOLEAN) {
                        colAggType = "Boolean";
                    } else if (javaType == JavaTypesManager.BYTE) {
                        colAggType = "Byte";
                    } else if (javaType == JavaTypesManager.BYTE_ARRAY) {
                        colAggType = "byte[]";
                    } else if (javaType == JavaTypesManager.CHARACTER) {
                        colAggType = "Character";
                    } else if (javaType == JavaTypesManager.DATE) {
                        colAggType = "java.util.Date";
                    } else if (javaType == JavaTypesManager.DOUBLE) {
                        colAggType = "Double";
                    } else if (javaType == JavaTypesManager.FLOAT) {
                        colAggType = "Float";
                    } else if (javaType == JavaTypesManager.INTEGER) {
                        colAggType = "Integer";
                    } else if (javaType == JavaTypesManager.LONG) {
                        colAggType = "Long";
                    } else if (javaType == JavaTypesManager.SHORT) {
                        colAggType = "Short";
                    } else if (javaType == JavaTypesManager.STRING) {
                        colAggType = "String";
                    } else if (javaType == JavaTypesManager.OBJECT) {
                        colAggType = "Object";
                    } else if (javaType == JavaTypesManager.getJavaTypeFromId("id_Geometry")) {
                        colAggType = "Geometry";
                    }
                    break;
                }
            }
        }
    }
}
%>
}

java.util.Map<<%=colAggType %>, OperationStruct<%=cid %>> hash_<%=colAgg %>_<%=cid %> =
    new java.util.HashMap<<%=colAggType %>, OperationStruct<%=cid %>>();

OperationStruct<%=cid %> operation_result_<%=cid %> = null;
