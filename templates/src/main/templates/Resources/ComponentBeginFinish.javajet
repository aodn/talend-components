
	int nb_resources_<%=cid %> = 0;
	
	String url_<%=cid %> = "jdbc:postgresql://"+<%=dbhost%>+":"+<%=dbport%>+"/"+<%=dbname%>;
	String schema_<%=cid%> = <%=dbschema%>;
	String userName_<%=cid%> = <%=(dbuser != null && dbuser.trim().length() == 0)? "null":dbuser%>;
	String password_<%=cid%> = <%=(dbpass != null && dbpass.trim().length() == 0)? "null":dbpass%>;
    String jobName_<%=cid%> = <%=jobName%>;
    String harvestType_<%=cid%> = <%=harvestType%>;
    
    <% if (useCustomQuery) { %>
    	dbquery_<%=cid%> = <%=customQuery%>;
    <% } %> 
    
    <% if (useFilter) { %>
      dbquery_<%=cid%> += " AND url like '" + <%=filter%> + "' ";
    <% } %>
    
	java.sql.Connection conn_<%=cid%>=null;

    try {
    	// Get connection
		java.lang.Class.forName("org.postgresql.Driver");
		conn_<%=cid%> = java.sql.DriverManager.getConnection(url_<%=cid%>, userName_<%=cid%>, password_<%=cid%>);
		conn_<%=cid%>.setAutoCommit(false);
		
		// Determine resources that have been added or modified since last invocation
		
		java.sql.PreparedStatement resourcesStmt<%=cid%> = conn_<%=cid%>
				.prepareStatement(dbquery_<%=cid%>);
				
		resourcesStmt<%=cid%>.setString(1, jobName_<%=cid%>);
		resourcesStmt<%=cid%>.setString(2, harvestType_<%=cid%>);

		java.sql.ResultSet resourcesRS_<%=cid%> = resourcesStmt<%=cid%>
				.executeQuery();
				
		while (resourcesRS_<%=cid%>.next()) {
		
			Long id_<%=cid %> = resourcesRS_<%=cid%>.getLong("id");
			String resourceUrl_<%=cid %> = resourcesRS_<%=cid%>.getString("url");
			java.util.Date lastModified_<%=cid %> = new java.util.Date(resourcesRS_<%=cid%>.getTimestamp("modified").getTime());
		
			globalMap.put("<%=cid %>_FILE_ID",  id_<%=cid %>);
			globalMap.put("<%=cid %>_URL",  resourceUrl_<%=cid %>);
			globalMap.put("<%=cid %>_MODIFIED", lastModified_<%=cid %>);

<% if (!dieOnError) { %>
			try {
<% } %>
			
			    // Iterate
