<%@ jet
   imports="
   org.talend.core.model.process.INode
   org.talend.core.model.process.ElementParameterParser
   org.talend.core.model.metadata.IMetadataTable
   org.talend.core.model.metadata.IMetadataColumn
   org.talend.core.model.process.IConnection
   org.talend.core.model.process.IConnectionCategory
   org.talend.designer.codegen.config.CodeGeneratorArgument
   org.talend.core.model.metadata.types.JavaTypesManager
   org.talend.core.model.metadata.types.JavaType
   java.util.List
   java.util.Map
   "
%>
<%
CodeGeneratorArgument codeGenArgument = (CodeGeneratorArgument) argument;
INode node = (INode)codeGenArgument.getArgument();
String cid = node.getUniqueName();
String manifestFilename = ElementParameterParser.getValue(node, "__MANIFEST_FILENAME__");
String basePath = ElementParameterParser.getValue(node, "__BASE_PATH__");
%>

System.out.println("Reading from manifest file: " + <%= manifestFilename %>);

int NB_FILE<%=cid%> = 0;

java.io.BufferedReader br = new java.io.BufferedReader(new java.io.FileReader(<%= manifestFilename %>));
String line = null;
while ((line = br.readLine()) != null && !line.isEmpty()) {

<%
if (basePath != null && !basePath.isEmpty()) {
%>
    String currentFileName_<%=cid%> = new java.io.File(<%= basePath %>, line).getPath();
<%
}
else {
%>
    String currentFileName_<%=cid%> = line;
<%
}
%>

    java.io.File file = new java.io.File(currentFileName_<%=cid%>);
    Boolean fileExists = file.exists();

    NB_FILE<%=cid%>++;
